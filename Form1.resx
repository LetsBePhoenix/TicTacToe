<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAMjIAAAEAGABoHwAAFgAAACgAAAAyAAAAZAAAAAEAGAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAEAAAGAAAGAAAGAAAGAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAYAAAkAAApAAAuAAA6AABAAABAAABAAABAAAA6
        AAAuAAApAAAkAAAYAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABEAACAA
        AC4AAD0AAFAAAFkAAF4AAGkAAG4AAG4AAG4AAG4AAGkAAF4AAFkAAFAAAD0AAC4AACAAABEAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAADAAAIQAANgAATwAAXgAAaQAAdgAAgQAAiQAAkwAAmAAAmAAAmAAA
        mAAAkwAAiQAAgQAAdgAAaQAAXgAATwAANgAAIQAADAAAAAAAAAAAAAAAAAAAAAASAAASAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAYAAAxAABPAABk
        AAB2AACHAACTAACdAACnAACuAAC2AAC6AAC6AAC6AAC6AAC2AACuAACnAACdAACTAACHAAB2AABkAABP
        AAAxAAAYAAAAAAAAAAAAAE4AAFEAABIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAYAACEAAD4AAFwAAHMAAIgAAJsAAKkAALQAAL4AAMQAAMsAANEAANQAANQA
        ANQAANQAANEAAMsAAMQAAL4AALQAAKkAAJsAAIgAAHMAAFwAAD4AACEAAAUAbgAAhQAATgAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABgAAKQAATAAAZwAAfwAA
        lgAAqwAAuAAAwwAAzgAA1gAA3AAA4QAA5AAA5gEA5gEA5gEA5gEA5AAA4QAA3AAA1gAAzgAAwwAAuAAA
        qwAAlgAAfwAAZwAARAB9HAC4BACPAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAB0AAB0AAAAGAAApAABPAABuAACIAACfAAC0AADEAADQAADZAADhAADnAQDsAQDvAgDwAgDy
        AgDyAwDyAwDyAgDwAgDvAgDsAQDnAQDhAADZAADQAADEAAC0AACfAAB6AH9DANE1AMMmAGAGAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAbQUAbSkAAU8AAG4AAI8AAKYA
        ALoAAMsAANYAAOIAAOkBAO4CAPIDAPUDAPcDAPgEAPkEAPkEAPkEAPkEAPgEAPcDAPUDAPIDAO4CAOkB
        AOIAANYAAMsAAKcAf2QA1lQA12IAgk8AACkAAAYAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAGgCXMwDDYQCFjwAAqAAAvAAAzgAA3AAA5QAA7gIA8gMA9gMA+QQA+wQA/AQA
        /AUA/AUA/AUA/AUA/AUA/AUA/AQA+wQA+QQA9gMA8gMA7gIA5QAAxwB9fQDVZwDekgCOjwAAbgAATAAA
        IQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAYAAA+AABQAKs1AO5/ALO8
        AADOAADeAADpAQDxAgD1AwD5BAD8BAD8BQD8BQD9BQD9BQD9BQD9BQD9BQD9BQD9BQD9BQD8BQD8BQD8
        BAD5BAD1AwDeAnOWAM9NAPObALa6ACymAACIAABnAAA+AAAYAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAwAADEAAFwAAH8AAHsArjoA9ZEAwtkAQOoBAPIDAPcDAPoEAPwFAPwFAP0FAP0G
        AP0GAP0GAPgGAPgGAPgGAPoGAP0GAP0GAP0GAP0FAPwFAPwFAO8EWLMBv04A9YsA2MoAes4AALoAAJ8A
        AH8AAFwAADEAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIQAATwAAcwAAlgAAtAAA
        ngCuQwD2VQDywgKo9wQA+wQA/AUA/QUA/QYA/QYA+AYA9wYA7wYA6gYA5AYA5AYA6QYA7wYA9wYA+AYA
        /AYA/QYA+wUfzwOiawHthgHg1gKH6QEA3AAAywAAtAAAlgAAcwAATwAAIQAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAARAAA2AABkAACIAACrAADEAADWAAC1AKtQAPQdAP27Arn8BQD9BQD9BgD6BgD3
        BgDmBgDYBgDQBgDDBgDABgDABgDEBgDSBgDZBgDoBgD3BgD8BgDdBIyEAeKHAeHdA4n3AwDxAgDlAADW
        AADEAACrAACIAABkAAA2AAARAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAAAE8AAHYAAJsAALgA
        ANAAAOIAAO4CAMwCnmwB7AQA/7oDu/0GAPoGAOwGAOAGAMoGALEFAJ8EAJEEAIwDAIwDAJMEAKEEALMG
        AMsGAOIGANIFiYcC4V0B8swDp/wFAPoEAPUDAO4CAOIAANAAALgAAJsAAHYAAE8AACAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAALgAAXgAAhwAAqQAAwwAA2QAA6QEA8gMA+QQA5QR6lQLZAQD/gAHkzQSP
        1wcAuwYAmgQAfgMAagIAWgIAVAIAVAIAWwIAagIAgQMAnQQApwWJcwLhHQD9owLP7QVo/QUA/AUA+QQA
        8gMA6QEA2QAAwwAAqQAAhwAAXgAALgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAYAAA9AABpAACTAAC0
        AADOAADhAADuAgD2AwD8BAD8BQD6Bi61A8AAAP8mAPyLA7eRBABwAgBSAgA6AQArAQAkAQAkAQArAQA8
        AQBVAgBkAolOAeACAP94At/TBYX8BgD9BgD8BQD8BAD2AwDuAgDhAADOAAC0AACTAABpAAA9AAAYAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAACQAAFAAAHYAAJ0AAL4AANYAAOcBAPIDAPkEAPwFAP0FAP0GAPcGAKcD
        uwAA/wIA/0wBu0cCACkBABYAAAsAAAUAAAUAAAwAABgAACYBhyUB3wEA/08B4K0FiecGAPkGAP0GAP0F
        APwFAPkEAPIDAOcBANYAAL4AAJ0AAHYAAFAAACQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAKQAAWQAAgQAA
        pwAAxAAA3AAA7AEA9QMA+wQA/AUA/QYA/AYA6wYA1AYAdwO7AQD/AAD/GgG7DgAAAgAAAAAAAAAAAAAA
        AAAAAgB/BQDaAQD+JwHhawKJqQYA1wYA7gYA/AYA/QYA/AUA+wQA9QMA7AEA3AAAxAAApwAAgQAAWQAA
        KQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAuAABeAACJAACuAADLAADhAADvAgD3AwD8BAD9BQD9BgD6BgDo
        BgDABgCMBABBAbsAAP8AAP8AANkAAHoAAAAAAAAAAAAAAE4AAMIAAPsDAO0oAZ9gAgCQBADFBgDqBgD9
        BgD9BgD9BQD8BAD3AwDvAgDhAADLAACuAACJAABeAAAuAAAAAAAAAAAAAAAAAAAAAAAAABAAADoAAGkA
        AJMAALYAANEAAOQAAPACAPgEAPwFAP0FAP0GAPgGANsHALMGAHwEAEgCABQBuQAA/QAA/wAA+gAAtAAA
        AAAAAAAAmwAA6wAA/QMAyCIBWE0CAIMEALkGAN8HAPoGAP0GAP0FAPwFAPgEAPACAOQAANEAALYAAJMA
        AGkAADoAABAAAAAAAAAAAAAAAAAAAAAAGAAAQAAAbgAAmAAAugAA1AAA5gEA8gIA+QQA/AUA/QUA/AYA
        7gYA2AYApgYAcAMAPAEAEgAAAQCuAAD2AAD/AAD+AAC7AACJAADhAAD/AADdAgCDGAAAQAEAdgMArQYA
        2wcA8QYA/QYA/QUA/AUA+QQA8gIA5gEA1AAAugAAmAAAbgAAQAAAGAAAAAAAAAAAAAAAAAAAAAAYAABA
        AABuAACYAAC6AADUAADmAQDyAwD5BAD8BQD9BQD8BgDuBgDXBgCmBgBvAwA6AQARAAABAAAAAG0AANMA
        AP8AAP8AAPEAAP8AAOAAAIgBAAAVAAA/AQB1AwCrBgDbBgDxBgD9BgD9BQD8BQD5BADyAwDmAQDUAAC6
        AACYAABuAABAAAAYAAAAAAAAAAAAAAAAAAAAABgAAEAAAG4AAJgAALoAANQAAOYBAPIDAPkEAPwFAP0F
        APwGAO4GANkGAKgGAG8DADsBABQAAAEAAAAAAAAAAAAAzwAA/wAA/wAA8QAAiQAAAAIAABgAAEIBAHgD
        AK4GAN0HAPEGAP0GAP0FAPwFAPkEAPIDAOYBANQAALoAAJgAAG4AAEAAABgAAAAAAAAAAAAAAAAAAAAA
        GAAAQAAAbgAAmAAAugAA1AAA5gEA8gIA+QQA/AUA/QUA/QYA+QYA3QcAswYAfQQASQIAIAEABQAAAAAA
        AACDAADdAAD/AAD/AAD/AADTAABtBwAAJQEATgIAggQAuQYA4QcA/AYA/QYA/QUA/AUA+QQA8gIA5gEA
        1AAAugAAmAAAbgAAQAAAGAAAAAAAAAAAAAAAAAAAAAAQAAA6AABpAACTAAC2AADRAADkAADwAgD4BAD8
        BQD9BQD9BgD8BgDpBwDABgCNBQBdAgAxAQARAAACAFgAAMgAAP0AAOsAANQAAP4AAP8AAPYNAK42AQBi
        AgCUBQDEBgDsBwD9BgD9BgD9BQD8BQD4BADwAgDkAADRAAC2AACTAABpAAA6AAAQAAAAAAAAAAAAAAAA
        AAAAAAAAAC4AAF4AAIkAAK4AAMsAAOEAAO8CAPcDAPwEAP0FAP0GAP0GAO0GANAGAKgGAHkDAE4CACsB
        AAoAnwAA7QAA+wAAwgAATgEAtAAA+gAA/wEA/TwBuX4DAK0GANQGAPAGAP0GAP0GAP0FAPwEAPcDAO8C
        AOEAAMsAAK4AAIkAAF4AAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAAAKQAAWQAAgQAApwAAxAAA3AAA7AEA
        9QMA+wQA/AUA/QYA/AYA9AYA4QcAwAYAlgUAbQMAQQKJEwDhAAD+BADaBgB/CAAADgAAFwB6FwDZAAD/
        AgD/cQO7xgYA5QcA9QYA/QYA/QYA/AUA+wQA9QMA7AEA3AAAxAAApwAAgQAAWQAAKQAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAkAABQAAB2AACdAAC+AADWAADnAQDyAwD5BAD8BQD9BQD9BgD9BgDwBgDeBgC7BgCC
        BIk6AeABAP8dAN8nAYcoAQAoAQAuAQBAAQBZAgBWArsAAP8BAP+lBLvzBgD+BgD9BgD9BQD8BQD5BADy
        AwDnAQDWAAC+AACdAAB2AABQAAAkAAAAAAAAAAAAAAAAAAAAAAAAAAAAABgAAD0AAGkAAJMAALQAAM4A
        AOEAAO4CAPYDAPwEAPwFAP0GAP0GAP0GAO8HAMMFhWYC3wIA/0UB4GACiWACAFkCAFkCAGECAHADAIYE
        AKEFAIwDuwUA/wEA/7oDu/0GAP0GAPwFAPwEAPYDAO4CAOEAAM4AALQAAJMAAGkAAD0AABgAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAALgAAXgAAhwAAqQAAwwAA2QAA6QEA8gMA+QQA/AUA/QUA/QYA/QYA7QVo
        mwPPGwD9bALhoAWJpAYAmAUAkQQAkQQAmgUApgYAugYAzQYA4wcAtwS3LwD8AAD/tQPA+gUu/AUA+QQA
        8gMA6QEA2QAAwwAAqQAAhwAAXgAALgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgAABPAAB2AACb
        AAC4AADQAADiAADuAgD1AwD6BAD8BQD9BQD9BgDMBKddAfKDAuHKBYnfBwDUBgDKBgDEBgDEBgDKBgDV
        BgDgBwDmBwD0BgD+BgDbBI+BAeQBAP+UAtnjA3r1AwDuAgDiAADQAAC4AACbAAB2AABPAAAgAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAABEAADYAAGQAAIgAAKsAAMQAANYAAOUAAPECAPcDAPsEAPwFAN8E
        iYgC4YQB4t4EjP0GAPQGAPIHAO4HAOUHAOUHAPAHAPMHAPUGAP0GAP4GAP0GAP0GAP0FALkDuwQA/2sA
        7MgBnuUAANYAAMQAAKsAAIgAAGQAADYAABEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIQAA
        TwAAcwAAlgAAtAAAywAA3AAA6QEA8gMA9wQA3gOHiQHgbAHt0ASi+wYf/QYA/gYA/gYA/QYA/QYA/QYA
        /gYA/gYA/gYA/QYA/QYA/QYA/QUA/AUA+wQAuAK5HAD9TQD0rgCrywAAtAAAlgAAcwAATwAAIQAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMAAAxAABcAAB/AACfAAC6AADOAADeAADqAQDcAnqT
        AdhRAPW2Ar/xBVj9BQD9BgD9BgD9BgD9BgD9BgD9BgD9BgD9BgD9BgD9BgD9BQD8BQD8BQD6BAD3AwDy
        AwC8AahRAPI+APaRAK6fAAB/AABcAAAxAAAMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAABgAAD4AAGcAAIgAAKYAALwAAM4AANsALLABtlQA854Bz+UDc/wEAPwFAPwFAP0FAP0FAP0FAP0F
        AP0FAP0FAP0FAP0FAPwFAPwFAPwEAPkEAPUDAPECAOkBAN4AAMkAQIQAwjMA9WkArmcAAD4AABgAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIQAATAAAbgAAjwAAqAAAvAAAswCO
        eQDejADV1wJ98gMA9gMA+QQA+wQA/AQA/AUA/AUA/AUA/AUA/AUA/AUA/AQA+wQA+QQA9gMA8gMA7gIA
        5QAA3AAAzgAAvAAAqAAAbQCzKQDuOgCrIQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAGAAApAABPAABuAACPAACUAIJuANd7ANbAAH/iAADpAQDuAgDyAwD1AwD3AwD4BAD5
        BAD5BAD5BAD5BAD4BAD3AwD1AwDyAwDuAgDpAQDiAADWAADLAAC6AACmAACPAABuAABFAIUaAMMEAJcA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAYAACkAAE8AAGgAYF4A
        w2MA0aIAf8QAANAAANkAAOEAAOcBAOwBAO8CAPACAPICAPIDAPIDAPICAPACAO8CAOwBAOcBAOEAANkA
        ANAAAMQAALQAAJ8AAIgAAG4AAE8AACkAAAYAAQAAbQAAbQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAABgAAKQABQQCPSwC4cgB9lgAAqwAAuAAAwwAAzgAA1gAA3AAA4QAA
        5AAA5gEA5gEA5gEA5gEA5AAA4QAA3AAA1gAAzgAAwwAAuAAAqwAAlgAAfwAAZwAATAAAKQAABgAAAAAA
        AAAAAAAdAAAdAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAGAE4c
        AIU5AG5cAABzAACIAACbAACpAAC0AAC+AADEAADLAADRAADUAADUAADUAADUAADRAADLAADEAAC+AAC0
        AACpAACbAACIAABzAABcAAA+AAAhAAAGAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEgAAUQAAThgAADEAAE8AAGQAAHYAAIcAAJMAAJ0AAKcA
        AK4AALYAALoAALoAALoAALoAALYAAK4AAKcAAJ0AAJMAAIcAAHYAAGQAAE8AADEAABgAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAS
        AAASAAAAAAAADAAAIQAANgAATwAAXgAAaQAAdgAAgQAAiQAAkwAAmAAAmAAAmAAAmAAAkwAAiQAAgQAA
        dgAAaQAAXgAATwAANgAAIQAADAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAARAAAgAAAuAAA9AABQ
        AABZAABeAABpAABuAABuAABuAABuAABpAABeAABZAABQAAA9AAAuAAAgAAARAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABgAACQAACkAAC4AADoAAEAAAEAAAEAAAEAAADoAAC4A
        ACkAACQAABgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAEAAAGAAAGAAAGAAAGAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
</value>
  </data>
</root>